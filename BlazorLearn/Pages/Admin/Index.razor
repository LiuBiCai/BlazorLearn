@page "/"
@using BlazorLearn.Entity;
@attribute [Authorize]
@using System.Security.Claims;

 <AntDesign.Row Type="flex" Gutter="24">
   <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="6" Style="margin-bottom: 24px;">
       
            <ChartCard Title="预估消费"
                       Total="@debt"
                       ContentHeight="46"
               Avatar="https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png">

    </ChartCard>
   </AntDesign.Col>
<AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="6" Style="margin-bottom: 24px;">
    
    <ChartCard Title="进行中的订单"
               Total="@inOrder"
               ContentHeight="46"
                   Avatar="/images/loading.jpg">

    </ChartCard>
</AntDesign.Col>
<AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="6" Style="margin-bottom: 24px;">
    
    <ChartCard Title="已完成订单"
               Total="@finishOrder"
               ContentHeight="46"
                   Avatar="/images/finished.jpg">

    </ChartCard>
</AntDesign.Col>
    <AntDesign.Col Xs="24" Sm="12" Md="12" Lg="12" Xl="6" Style="margin-bottom: 24px;">

        <ChartCard Title="价格"
                   Total="@price"
                   ContentHeight="46"
                   Avatar="https://ts1.cn.mm.bing.net/th/id/R-C.d1e97707acf0ea2b245a770c538cf962?rik=9th3y5Zx0zEwAw&riu=http%3a%2f%2fdpic.tiankong.com%2ftf%2fsa%2fQJ8851095703.jpg&ehk=KmA%2fis1QQsg6nbl4yMBkcCUa9DEJZuAxaHd9Ig0hYAw%3d&risl=&pid=ImgRaw&r=0">

        </ChartCard>
    </AntDesign.Col>
</AntDesign.Row>


@code
{
    private string debt = "0";
    private string inOrder = "0";
    private string finishOrder = "0";
    private string price = "0";

    protected override async Task OnInitializedAsync()
    {
        var _user = UserEntity.Where(x => x.UserName == Furion.App.User.FindFirstValue(ClaimTypes.Name)).First();
        if (_user == null)
        {
            return;
        }
        var Data = OrderEntity.Select.Where(x => x.UserId == _user.Id).ToList();
        //Data = OrderEntity.Select.Where(x => x.UserId == _user.Id).OrderByDescending(x => x.CreateTime).ToList();

        //debt = await Http.GetStringAsync("https://localhost:44384/api/Debt");
        debt = "￥"+(Data.Where(x => x.Status == OrderStatus.已完成).Sum(x => x.OrderAmountYuan)-_user.payed);
        inOrder =Data.Where(x=>x.Status==OrderStatus.正在发货).Count().ToString();
        finishOrder = Data.Where(x => x.Status == OrderStatus.已完成).Count().ToString();
        price = "￥" + _user.price+"/W";
	}

   
}